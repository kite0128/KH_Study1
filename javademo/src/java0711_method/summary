변수 : 하나의 값을 저장하기 위한 메모리 공간
   int num=3;

배열: 타입이 같은 데이터를 하나로 묶어 준것
  int[] num=new int[3];
  num[0]=10;
  num[1]=20;
  num[2]=30;
  
홍길동 30  M 
이영희 25  f

구조체: 서로 관련이 있는 데이터를 하나로 묶어 준 것
struct person{
   char[] name;
   int age;
   char gen;
} 

클래스 : 구조체(변수) + 함수(메소드)
class Person{
  String name;
  int age;
  char gen;
}


객체(object) : 실세계에 존재하는 모든 사물이나 개념
객체모델링 : 객체의 특징과 동작을 구분한다.(객체들을 분석하는 과정이다.)
홍길동(객체)
객체의 특징: 홍길동 30 남
객체의 동작 : 먹는다. 달린다. 멈춘다.

이영희(객체)
객체의 특징:이영희 25 여
객체의 동작:먹는다. 달린다. 멈춘다. 

클래스 정의 = 사용자가 정의한 데이터 타입
class Person{
 String name; //멤버변수
 int age;
 char gen;
 
 
 //메소드
 void eat(){ 
  System.out.println("eat");
  }
  
  void run(){
   System.out.println("run");
   }
  
  void stop(){
   System.out.println("stop");
}


int num;
Person ps=new Person();
Person ps; 객체선언 -주소를 저장하기 위한 메모리 생성이 된다.
ps=new person( ); 객체생성-힙영역에 메모리가 생성된다.
ps: 객체참조변수 , 참조변수, 객체변수
객체참조변수.멤버변수
객체참조변수.메소드( )
ps.name="홍길동";
ps.age=30;
ps.gen='남';
ps.stop();

Person pp=new Person();
pp.name="이영희";
pp.age=25;
pp.gen='여';


/*[명명규칙]
 * 공통이름 규칙
 * 1 영문,숫자,특수문자($,_) 조합해서 사용한다.
 * 2 숫자로 시작할 수 없다.
 * 3 이름길이에 제한이 없다.
 * 
 * 클래스
 * 1 대문자로 시작한다.(관례)
 * 2 두단어 이상이용해서 이름을 지정할때는 단어의 첫글자는
 *   대문자로 시작하고 나머지는 소문자를 사용한다.(CarData)
 * 3 한글을 클래스명으로 사용할 수 있다.
 *    
 * 변수
 * 1 소문자로 시작한다.(관례)
 * 2 두 단어 이상이용해서 이름을 지정할때 두번째단어부터 첫글자는 대문자이고
 *   나머지는 소문자로 사용한다. (speedUp)
 *   
 *  
 * 메소드
 * 1 소문자로 시작한다.(관례)
 * 2 두 단어 이상이용해서 이름을 지정할때 두번째단어부터 첫글자는 대문자이고
 *   나머지는 소문자로 사용한다. (speedUp)
 */



















