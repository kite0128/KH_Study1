/*
 * 변수 : 하나의 값을 저장한다.
 * 배열 : 같은 타입의 값들을 하나로 묶어주는 기능이다.
 * 클래스 : 서로 관련이 있는 값들을 하나로 묶어주는 기능이다.
 * 컬렉션 : 메모리의 크기를 추가, 삭제 기능을 제공한다.
 * 
 * 자료구조 : 데이터를 메모리에 저장하고 빠르고 정확하게 검색해서
 *           가져올 수 있도록 구현하는 구조이다.
 *  컬렉션 : 자료구조을 처리해주는 클래스들의 묶음이다.
 *  
 *  컬렉션 프레임워크
 *  1 데이터들을 저장하는 클래스들을 표준화한 설계
 *  2 다수의 데이터를 쉽게 처리할 수 있는 방법을 제공하는 클래스들로 구성되었다.
 *  
 *  컬렉션
 *  다수의 데이터들이다.
 * 
 *  프레임워크
 *  표준화, 정형화된 체계적인 프로그래밍 방식
 *  
 *  컬렉션 클래스
 *  다수의 데이터를 저장할 수 있는 클래스
 *  
 *  변수
 *  int num;
 *  
 *  배열
 *  int[] data=new int[3];
 *  
 *  클래스
 *  class Person{
 *  char[] name;
 *  int age;
 *  double avg;
 *  }
 *  
 *  컬렉션 클래스
 *   Vector v=new Vector();
 *   v.add(new Person());
 *   v.add(new Person());
 *   
 *   
 *   컬렉션 프레임워크에서 제공하는 인터페이스
 *   Collection
 *    1 List - 순서가 있는 데이터의 집합(Vector,ArrayList,LinkedList...)
 *    2 Set- 순서를 유지하지 않는 데이터의 집합(HashSet, TreeSet...)
 *   Map- 키와 값이 쌍으로 이루어진 데이터의 집합(HashMap, TreeMap, HashTable..)
 *    
 */